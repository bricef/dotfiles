#!/bin/bash

#
# Set shell options
#

echo "Loading shell configuration"

CONFIGROOT="${HOME}/.config/shell"

# propagate error status along pipes
# useful for the "foo | bar | buzz && hello" construct
set -o pipefail 
type shopt > /dev/null && shopt -s checkwinsize
type shopt > /dev/null && shopt -s histappend
type shopt > /dev/null && shopt -s autocd
type shopt > /dev/null && shopt -s expand_aliases

function source_exists {
  test -e "$1" && source "$1"
}

#
# Source common variables, functions and aliases
#
source_exists "${CONFIGROOT}/variables.sh"
source_exists "${CONFIGROOT}/functions.sh"
source_exists "${CONFIGROOT}/aliases.sh"


#
# Set up PATH variable based on platform
#
source_exists "${CONFIGROOT}/PATH/common"
source_exists "${CONFIGROOT}/PATH/$(uname -s)"

PATH="${PATH}:${HOME}/bin"
export PATH="${PATH}:${HOME}/.local/bin"





if [[ "$(echo $0)" = "bash" ]]; then
  source_exists /usr/share/bash-completion/bash_completion
  source_exists /usr/local/etc/bash_completion
  source_exists ~/scripts/git-completion.bash 
fi
source_exists ~/scripts/git-prompt.sh 
source_exists ~/.nvm/nvm.sh 
source_exists ~/.nvm/bash_completion
source_exists ~/.cargo/env
source_exists ~/.rvm/scripts/rvm
source_exists ~/.opam/opam-init/init.sh
source_exists $HOMEBREW_PREFIX/opt/asdf/libexec/asdf.sh
source_exists $HOME/.cargo/env



# Tool-specific setups
type dirstack.py &> /dev/null && source /dev/stdin <<< "$(dirstack.py init_shell)" # dirstack helper functions and shell setup
type go &> /dev/null && export GOPATH=$(go env GOPATH) && export PATH="${PATH}:${GOPATH}/bin"
type rbenv &> /dev/null && eval "$(rbenv init -)"
type zoxide &> /dev/null && eval "$(zoxide init zsh)"
type fzf &> /dev/null && source <(fzf --zsh)
type direnv &> /dev/null && eval "$(direnv hook zsh)"
# Pyenv
type pyenv &> /dev/null && export PYENV_ROOT="${HOME}/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="${PYENV_ROOT}/bin:${PATH}"
type pyenv &> /dev/null && eval "$(pyenv init -)"



#
# Platorm-specific profiles
#
case 'uname -s' in
  "Linux")
    source_exists "${CONFIGROOT}/profile-linux"
    ;;
  "Darwin")
    source_exists "${CONFIGROOT}/profile-mac"
    ;;
  "MINGW32_NT")
    source_exists "${CONFIGROOT}/profile-linux"
    ;;
esac


function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

