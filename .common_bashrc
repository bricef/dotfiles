
# propagate error status along pipes
# useful for the "foo | bar | buzz && hello" construct
set -o pipefail 

EDITOR=vim

shopt -s checkwinsize
shopt -s histappend

export HISTCONTROL=erasedups
export HISTSIZE=3000
export HISTFILESIZE=3000
export HISTIGNORE="ls:ll:l:la:lla:pwd:..:cd..:cd ..:"
export EDITOR="vim"

# Append commands to the history every time a prompt is shown,
# instead of after closing the session.
PROMPT_COMMAND='history -a'

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

test -f ~/scripts/git-prompt.sh && source ~/scripts/git-prompt.sh 
# Show dirty state of branch
GIT_PS1_SHOWDIRTYSTATE=true

alias sudo="sudo "
alias grep="grep --color=auto"
alias ..="cd .."
alias tmux="tmux -2"
alias cd..="cd .."
alias l="ls"
alias +x="chmod +x"
alias bp="bpython"
alias rebash="source ~/.bashrc"
# because my fingers have been trained
alias :e="vim"
alias :q="exit"
export LS_COLORS="di=35"


B_BLACK="\[\e[40m\]"
B_RED="\[\e[41m\]"
B_GREEN="\[\e[42m\]"
B_YELLOW="\[\e[43m\]"
B_BLUE="\[\e[44m\]"
B_MAGENTA="\[\e[45m\]"
B_CYAN="\[\e[46m\]"
B_WHITE="\[\e[47m\]"

F_BLACK="\[\e[30m\]"
F_RED="\[\e[31m\]"
F_GREEN="\[\e[32m\]"
F_YELLOW="\[\e[33m\]"
F_BLUE="\[\e[34m\]"
F_MAGENTA="\[\e[35m\]"
F_CYAN="\[\e[36m\]"
F_WHITE="\[\e[37m\]"

BOLD="\[\e[1m\]"

END="\[\e[0m\]"


# special characters: ⚡ ↑↓↕ ☠☢➤✔✘
# see also http://www.utf8-chartable.de/unicode-utf8-table.pl

# uname@host:/working/dir$ _ 
#export PS1="\[\e[1;32m\]\u@\[\e[1;31m\]\h\[\e[1;32m\]:\w$\[\e[0m\] "

# [uname@host:/working/dir]>_
#export PS1="\[\e[1;32m\][\[\e[0;32m\]\u@\[\e[0;31m\]\h\[\e[0;32m\]:\w\[\e[1;32m\]]>\[\e[0m\]"

# ==[uname@host /working/dir ]==> 
# _
#export PS1="\[\e[1;32m\]==[\[\e[0m\]\u@\h \w \[\e[1;32m\]]==>\[\e[0m\] \n"

# [ uname@host ]( /working/dir )>
# $ _


function pstyle {
case $1 in
  "simple")
    PS1="\[\e[1;32m\]\u@\[\e[1;31m\]\h\[\e[1;32m\]:\w$\[\e[0m\] "
    ;;
  "fancy")
    # [16:02][BHAC ~ ]{ master }
    # ➤ 
    PS1="$BOLD$F_BLACK[$F_WHITE\A$F_BLACK][$END$BOLD$F_GREEN\h$BOLD$F_BLACK "
    PS1+="$END$F_GREEN\w$BOLD$F_BLACK ]"
    PS1+='`test "$(git branch 2> /dev/null | grep ^*)" && echo "{ "`'
    PS1+="$BOLD$F_RED"
    PS1+='$(__git_ps1 "%s" )'
    PS1+="$BOLD$F_BLACK"
    PS1+='`test "$(git branch 2>/dev/null| grep ^*)" && echo " }"`'
    PS1+="\n$END"
    PS1+="$BOLD${F_BLACK}➤ $END"
    ;;
  "blue")
    # [16:02][BHAC ~ ]==>
    # $ 
    PS1="$F_BLUE[$BOLD\A$END$F_BLUE][$END$BOLD$F_MAGENTA\h$END$F_BLUE "
    PS1+="\w ]"
    PS1+="==>\n$END"
    PS1+="$F_BLUE$ $END"
    ;;
  "git-only")
    EDITOR=nano
    PS1="\u@$F_GREEN\h$END{$F_RED"
    PS1+='`git symbolic-ref HEAD 2>/dev/null | cut -b 12-`'
    PS1+="$END}:\w$ "
    ;;
  "uberclean")
	PS1="➤ "
	;;
  *)
    PS1="\u@\h:\w$ "
    ;;
esac
export PS1
}


case `hostname` in 
  "prometheus"|"barracuda")
    pstyle blue
    ;;
  "vsbldhost")
    pstyle simple
    ;;
  *)
    pstyle fancy
    ;;
esac

function ds {
  dir=$(dirstack.py "$@")
  test $dir && echo "cd $dir" && cd $dir
}

function pgen {
  </dev/urandom tr -dc A-Za-z0-9 | head -c $1 | cat - <(echo "")
}

PATHFILE="$HOME/.PATH_$(uname -s)"

if [ -f "$PATHFILE" ]; then
  while read _path; do
    PATH="${_path}:${PATH}"
  done <"$PATHFILE"
fi

PATH=$PATH:$(ruby -rubygems -e "puts Gem.user_dir")/bin
PATH=$PATH:$(go env GOPATH)/bin

export GOPATH=$(go env GOPATH)

export LC_ALL=en_GB.UTF-8
export LC_CTYPE=en_GB.UTF-8
export LANG=en_GB.UTF-8
export LANGUAGE=en_GB.UTF-8

if ls --color -d . >/dev/null 2>&1; then
    GNU_LS=1
elif ls -G -d . >/dev/null 2>&1; then
    BSD_LS=1
else
    SOLARIS_LS=1
fi

export ANSIBLE_HOSTS=~/.ansible_hosts

transfer() { if [ $# -eq 0 ]; then echo "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md"; return 1; fi 
tmpfile=$( mktemp -t transferXXX ); if tty -s; then basefile=$(basename "$1" | sed -e 's/[^a-zA-Z0-9._-]/-/g'); curl --progress-bar --upload-file "$1" "https://transfer.sh/$basefile" >> $tmpfile; else curl --progress-bar --upload-file "-" "https://transfer.sh/$1" >> $tmpfile ; fi; cat $tmpfile; rm -f $tmpfile; } 





